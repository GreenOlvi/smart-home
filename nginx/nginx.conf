user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    server_names_hash_bucket_size 64;

    #gzip  on;

    # include /etc/nginx/conf.d/*.conf;

    map $http_connection $connection_upgrade {
       "~*Upgrade" $http_connection;
       default keep-alive;
    }

#    upstream grafana {
#       server 127.0.0.1:3000;
#    }

    server {
        listen       443 ssl;
        listen  [::]:443 ssl;
        server_name         localhost raspi4.local;
        ssl_certificate     /certs/raspi4.local.chain.cert.pem;
        ssl_certificate_key /certs/raspi4.local.key.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5:!SHA1;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            proxy_pass             http://www:80;
            proxy_set_header       X-Forwarder-For      $remote_addr;
            proxy_set_header       Host $host;
        }

        location /sensorshub {
            proxy_pass             http://www:80;

            # Configuration for WebSockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_cache off;

            # WebSockets were implemented after http/1.0
            proxy_http_version 1.1;

            # Configuration for ServerSentEvents
            proxy_buffering off;

            # Configuration for LongPolling or if your KeepAliveInterval is longer than 60 seconds
            proxy_read_timeout 100s;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /node-red {
            proxy_pass             http://node-red:1880;
            proxy_http_version     1.1;
            proxy_cache_bypass     $http_upgrade;
            proxy_set_header       Upgrade              $http_upgrade;
            proxy_set_header       Connection           "upgrade";
            proxy_set_header       Host                 $host;
            proxy_set_header       X-Real-IP            $remote_addr;
            proxy_set_header       X-Forwarded-For      $proxy_add_x_forwarded_for;
            proxy_set_header       X-Forwarded-Proto    $scheme;
            proxy_set_header       X-Forwarded-Host     $host;
            proxy_set_header       X-Forwarded-Port     $server_port;
        }

        location /grafana {
            proxy_pass             http://grafana:3000;
            proxy_set_header       X-Forwarder-For      $remote_addr;
            #proxy_set_header       Upgrade              $http_upgrade;
            #proxy_set_header       Connection           "Upgrade";
            #proxy_set_header       Host                 $host;
        }

        location /grafana/api/live {
            proxy_pass             http://grafana:3000;
            proxy_http_version     1.1;
            proxy_set_header       Upgrade              $http_upgrade;
            proxy_set_header       Connection           "Upgrade";
            proxy_set_header       Host                 $host;
        } 

    }
}
